# frozen_string_literal: true

# !!!
# WARNING: This file is autogenerated
# Only modify code within MANUAL() sections
# or your changes may be overwritten later!
# !!!

require_relative 'request_helper'

module StytchB2B
  class OTPs
    include Stytch::RequestHelper
    attr_reader :sms

    def initialize(connection)
      @connection = connection

      @sms = StytchB2B::OTPs::Sms.new(@connection)
    end

    class Sms
      include Stytch::RequestHelper

      def initialize(connection)
        @connection = connection
      end

      def send(
        organization_id:,
        member_id:,
        phone_number: nil,
        locale: nil
      )
        request = {
          organization_id: organization_id,
          member_id: member_id
        }
        request[:phone_number] = phone_number unless phone_number.nil?
        request[:locale] = locale unless locale.nil?

        post_request('/v1/b2b/otps/sms/send', request)
      end

      def authenticate(
        organization_id:,
        member_id:,
        code:,
        intermediate_session_token: nil,
        session_token: nil,
        session_jwt: nil,
        session_duration_minutes: nil,
        session_custom_claims: nil,
        set_mfa_enrollment: nil
      )
        request = {
          organization_id: organization_id,
          member_id: member_id,
          code: code
        }
        request[:intermediate_session_token] = intermediate_session_token unless intermediate_session_token.nil?
        request[:session_token] = session_token unless session_token.nil?
        request[:session_jwt] = session_jwt unless session_jwt.nil?
        request[:session_duration_minutes] = session_duration_minutes unless session_duration_minutes.nil?
        request[:session_custom_claims] = session_custom_claims unless session_custom_claims.nil?
        request[:set_mfa_enrollment] = set_mfa_enrollment unless set_mfa_enrollment.nil?

        post_request('/v1/b2b/otps/sms/authenticate', request)
      end
    end
  end
end
